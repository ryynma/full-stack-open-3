{"version":3,"sources":["components/Person.js","components/Filter.js","components/Notification.js","components/AddPersonForm.js","services/persons.js","App.js","index.js"],"names":["Person","_ref","person","app","react_default","a","createElement","name","number","onClick","removePersonOf","id","Filter","onChange","Notification","message","className","AddPersonForm","onSubmit","addPerson","value","state","newName","handleChangeName","newNumber","handleChangeNumber","type","baseUrl","persons","getAll","axios","get","then","response","data","create","newObject","post","remove","delete","concat","update","changedObject","put","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isInList","map","p","toLowerCase","includes","event","preventDefault","trim","window","confirm","filter","valueOf","toLocaleLowerCase","changedPerson","objectSpread","add","personService","createdPerson","setState","setTimeout","updatedPerson","catch","error","target","handleChangeFilter","nameToRemove","removedPerson","console","log","_this2","_this3","personsToShow","components_Notification","components_Filter","components_AddPersonForm","components_Person","key","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0efedaee.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Person = ({ person, app }) => {\r\n\r\n    return (\r\n      <tr>\r\n        <td>{person.name}</td>\r\n        <td>{person.number}</td>\r\n        <td><button onClick={app.removePersonOf(person.id)}>poista</button></td>\r\n      </tr>\r\n    )\r\n  }\r\n  \r\n  export default Person","import React from 'react'\r\n\r\nconst Filter = ({ onChange }) => {\r\n  return (\r\n    <div>\r\n      Suodata <input onChange={onChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst Notification = ({message}) => {\r\n  if (message === null) {\r\n      return null\r\n  }\r\n  return (\r\n    <div className='notification'>\r\n        {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react';\r\n\r\nconst AddPersonForm = ({app}) => {\r\n  return (\r\n    <div>\r\n      <h2>Lisää uusi</h2>\r\n      <form onSubmit={app.addPerson}>\r\n        <div>\r\n          Nimi: <input value={app.state.newName} onChange={app.handleChangeName} />\r\n        </div>\r\n        <div>\r\n          Numero: <input value={app.state.newNumber} onChange={app.handleChangeNumber} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">Lisää</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddPersonForm","/**\r\n * Moduli, joka huolehtii liikenteestä palvelimelle.\r\n */\r\n\r\nimport axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\n/**\r\n * Palauttaa palvelimen datan json-muodossa.\r\n */\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n/**\r\n * Lähettää lisättävän datan palvelimelle ja palauttaa promisen.\r\n * @param {*} newObject \r\n */\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n/**\r\n * Poistaa annetun id:n mukaisen datan palvelimelta.\r\n * @param {*} id \r\n */\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n/**\r\n * Päivittää palvelimella olevaa dataa.\r\n * @param {*} changedObject \r\n */\r\nconst update = (changedObject) => {\r\n  const id = changedObject.id\r\n  const request = axios.put(`${baseUrl}/${id}`, changedObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, remove, update}","import React from 'react';\nimport Person from './components/Person';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport AddPersonForm from './components/AddPersonForm';\nimport personService from './services/persons'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      persons: [],\n      newName: '',\n      newNumber: '',\n      filter: '',\n      message: null\n    }\n  }\n\n  componentDidMount() {\n    personService.getAll()\n      .then(persons => this.setState({ persons }))\n  }\n\n  /**\n   * Kertoo, löytyykö nimi luettelosta.\n   * @param {*} name \n   */\n  isInList = (name) => {\n    return this.state.persons.map(p => p.name.toLowerCase()).includes(name.toLowerCase())\n  }\n\n  /**\n   * Lisää henkilön puhelinluetteloon.\n   * Jos henkilö on jo (tilamuuttujan) luettelossa,\n   * varmistaa käyttäjältä, korvataanko vanha numero uudella.\n   */\n  addPerson = (event) => {\n    event.preventDefault()\n    const newName = this.state.newName.trim()\n    const newNumber = this.state.newNumber.trim()\n\n    // Jos kyseessä on uusi henkilö, lisätään hänet palvelimelle ja tilamuuttujaan.\n    if (!this.isInList(newName)) {\n      this.add({ name: newName, number: newNumber})\n\n    // Muuten kysytään käyttäjältä, päivitetäänkö olemassaolevaa henkilöä.\n    } else {\n      const replace = window.confirm(`'${newName}' on jo luettelossa. Korvataanko vanha numero uudella?`)\n\n      if (replace) {\n        const person = this.state.persons.filter(p =>\n          p.name.toLowerCase().valueOf() === newName.toLocaleLowerCase().valueOf())[0]\n        const changedPerson = { ...person, number: newNumber }\n        this.update(changedPerson)\n      }\n    }\n  }\n\n  /**\n   * Lisää henkilön puhelinluetteloon palvelimelle ja tilamuuttujaan.\n   */\n  add = (person) => {\n    personService.create(person)\n      .then(createdPerson => {\n        // Lisätään henkilö myös tilamuuttujaan.\n        this.setState({\n          persons: this.state.persons.concat(createdPerson),\n          newName: '',\n          newNumber: '',\n          message: `Lisättiin ${createdPerson.name}`\n        })\n        setTimeout(() => {\n          this.setState({ message: null })\n        }, 4000)\n      })\n  }\n\n  /**\n   * Päivittää henkilön numeron palvelimelle ja tilamuuttujaan.\n   */\n  update = (changedPerson) => {\n    personService.update(changedPerson)\n      .then(updatedPerson => {\n        this.setState({\n          persons: this.state.persons.map(p => p.id === updatedPerson.id ? updatedPerson : p),\n          newName: '',\n          newNumber: '',\n          message: `Päivitettiin ${updatedPerson.name}`\n        })\n        setTimeout(() => {\n          this.setState({ message: null })\n        }, 4000)\n      })\n      // Jos henkilö oli poistettu palvelimelta juuri ennen päivitystä,\n      // lisätään hänet uudestaan uudella numerolla.\n      .catch(error => {\n        // Poistetaan henkilö ensin tilamuuttujasta.\n        this.setState({ persons: this.state.persons.filter(p => p.id !== changedPerson.id) })\n        this.add({ name: changedPerson.name, number: changedPerson.number})\n      })\n  }\n\n  handleChangeName = (event) => {\n    const newName = event.target.value\n    this.setState({newName})\n  }\n\n  handleChangeNumber = (event) => {\n    const newNumber = event.target.value\n    this.setState({newNumber})\n  }\n\n  handleChangeFilter = (event) => {\n    const filter = event.target.value\n    this.setState({filter})\n  }\n\n  /**\n   * Palauttaa funktion, jolla voidaan poistaa tietyn id:n omaava henkilö.\n   */\n  removePersonOf = (id) => {\n    return () => {\n      const nameToRemove = this.state.persons.filter(p => p.id === id).map(p => p.name)\n      const ok = window.confirm(`Poistetaanko ${nameToRemove}?`)\n\n      if (ok) {\n        personService.remove(id)\n          .then(removedPerson => {\n            console.log('poistettu henkilö:', removedPerson)\n            // Jos poistettiin henkilö, poistetaan myös tilamuuttujasta.\n            if (removedPerson) {\n              this.setState({\n                persons: this.state.persons.filter(p => p.id !== id),\n                message: `Poistettiin ${nameToRemove}`\n              })\n              setTimeout(() => {\n                this.setState({ message: null })\n              }, 4000)\n\n            } else {  // Joku toinen käyttäjä oli jo ehtinyt poistaa henkilön\n              this.setState({ message: 'Henkilö oli jo poistettu puhelinluettelosta'})\n              setTimeout(() => {\n                this.setState({ message: null })\n              }, 4000)\n              this.setState({ persons: this.state.persons.filter(p => p.id !== id) })  \n            }\n          })\n          .catch((error) => {\n            this.setState({ message: 'Poistaminen epäonnistui. Päivitä sivu.' })\n          })\n      }\n    }\n  }\n\n  render() {\n    const filter = this.state.filter.toLowerCase().trim()\n    const personsToShow =\n      filter ?\n        this.state.persons.filter(person => person.name.toLowerCase().includes(filter) ) :\n        this.state.persons\n\n    return (\n      <div>\n        <h2>Puhelinluettelo</h2>\n        <Notification message={this.state.message} />\n        <Filter onChange={this.handleChangeFilter} />\n        <AddPersonForm app={this} />\n\n        <h2>Numerot</h2>\n        <table>\n          <tbody>\n            {personsToShow.map(person => <Person key={person.name} person={person} app={this} />)}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default App","/**\n * Full Stack open tehtävät 2.6-2.11\n * Lomakkeen käyttö.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}